---
import Layout from '../layouts/Layout.astro';

// Demo page for testing the WebSocket hooks and utilities
const pageTitle = 'WebSocket Hooks Demo | Webler';
const pageDescription = 'Test the reusable WebSocket hooks and utilities for generation progress tracking.';
---

<Layout title={pageTitle} description={pageDescription}>
  <main class="min-h-screen bg-gray-50 py-12">
    <!-- Demo Header -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 mb-12">
      <div class="text-center">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">
          WebSocket Hooks Demo
        </h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
          Test the reusable WebSocket hooks and utilities for consistent WebSocket management across the application.
        </p>
      </div>
    </div>

    <!-- Demo Information -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 mb-8">
      <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">WebSocket Architecture</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div>
            <h3 class="font-medium text-gray-800 mb-2">üõ†Ô∏è Utilities (websocket.ts)</h3>
            <ul class="text-sm text-gray-600 space-y-1">
              <li>‚Ä¢ Socket configuration and event constants</li>
              <li>‚Ä¢ TypeScript interfaces and type guards</li>
              <li>‚Ä¢ Progress calculation utilities</li>
              <li>‚Ä¢ Error handling and logging helpers</li>
            </ul>
          </div>
          <div>
            <h3 class="font-medium text-gray-800 mb-2">üîó Base Hook (useWebSocket)</h3>
            <ul class="text-sm text-gray-600 space-y-1">
              <li>‚Ä¢ Connection state management</li>
              <li>‚Ä¢ Automatic reconnection with backoff</li>
              <li>‚Ä¢ Type-safe event handling</li>
              <li>‚Ä¢ Room management and cleanup</li>
            </ul>
          </div>
          <div>
            <h3 class="font-medium text-gray-800 mb-2">üìä Specialized Hook (useGenerationProgress)</h3>
            <ul class="text-sm text-gray-600 space-y-1">
              <li>‚Ä¢ Generation-specific progress tracking</li>
              <li>‚Ä¢ Step status management</li>
              <li>‚Ä¢ Auto-join and status recovery</li>
              <li>‚Ä¢ Progress calculation and callbacks</li>
            </ul>
          </div>
        </div>
      </div>
    </div>

    <!-- Features Documentation -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 mb-8">
      <div class="bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h3 class="text-lg font-semibold text-blue-900 mb-3">
          WebSocket Utilities Features
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h4 class="font-medium text-blue-800 mb-2">‚öôÔ∏è Configuration Management</h4>
            <ul class="text-sm text-blue-700 space-y-1">
              <li>‚Ä¢ Environment-based socket URL configuration</li>
              <li>‚Ä¢ Comprehensive socket options with defaults</li>
              <li>‚Ä¢ Event constants for type safety</li>
              <li>‚Ä¢ Debug logging with conditional output</li>
            </ul>
          </div>
          <div>
            <h4 class="font-medium text-blue-800 mb-2">üîÑ Connection Management</h4>
            <ul class="text-sm text-blue-700 space-y-1">
              <li>‚Ä¢ Automatic reconnection with exponential backoff</li>
              <li>‚Ä¢ Connection state tracking and error handling</li>
              <li>‚Ä¢ Graceful degradation and error recovery</li>
              <li>‚Ä¢ Proper cleanup and memory management</li>
            </ul>
          </div>
          <div>
            <h4 class="font-medium text-blue-800 mb-2">üì° Event Handling</h4>
            <ul class="text-sm text-blue-700 space-y-1">
              <li>‚Ä¢ Type-safe event emission and listening</li>
              <li>‚Ä¢ Event payload validation with type guards</li>
              <li>‚Ä¢ Room-based message routing</li>
              <li>‚Ä¢ Callback-based event handling</li>
            </ul>
          </div>
          <div>
            <h4 class="font-medium text-blue-800 mb-2">üìä Progress Utilities</h4>
            <ul class="text-sm text-blue-700 space-y-1">
              <li>‚Ä¢ Step-based progress calculation</li>
              <li>‚Ä¢ Weighted progress with configurable steps</li>
              <li>‚Ä¢ Time estimation based on current progress</li>
              <li>‚Ä¢ Step transition and validation logic</li>
            </ul>
          </div>
        </div>
      </div>
    </div>

    <!-- Hook Usage Examples -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 mb-8">
      <div class="bg-green-50 border border-green-200 rounded-lg p-6">
        <h3 class="text-lg font-semibold text-green-900 mb-3">
          Hook Usage Examples
        </h3>
        <div class="grid grid-cols-1 gap-6">
          <div>
            <h4 class="font-medium text-green-800 mb-2">useWebSocket Hook</h4>
            <div class="bg-white p-4 rounded border text-sm font-mono">
              <code class="text-green-700">
                const &#123; isConnected, emit, on, off &#125; = useWebSocket(&#123;<br/>
                &nbsp;&nbsp;autoConnect: true,<br/>
                &nbsp;&nbsp;reconnection: true,<br/>
                &nbsp;&nbsp;debug: true<br/>
                &#125;);
              </code>
            </div>
          </div>
          <div>
            <h4 class="font-medium text-green-800 mb-2">useGenerationProgress Hook</h4>
            <div class="bg-white p-4 rounded border text-sm font-mono">
              <code class="text-green-700">
                const &#123; progressState, isGenerating, startGeneration &#125; = useGenerationProgress(&#123;<br/>
                &nbsp;&nbsp;clientId: 'client-123',<br/>
                &nbsp;&nbsp;businessName: 'Acme Corp',<br/>
                &nbsp;&nbsp;onComplete: (data) =&gt; console.log('Done!', data.previewUrl)<br/>
                &#125;);
              </code>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Technical Implementation -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="bg-gray-100 border border-gray-300 rounded-lg p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-3">
          Technical Implementation
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h4 class="font-medium text-gray-800 mb-2">üéØ Key Benefits</h4>
            <ul class="text-sm text-gray-700 space-y-1">
              <li>‚Ä¢ Consistent WebSocket management across components</li>
              <li>‚Ä¢ Reusable connection logic with error handling</li>
              <li>‚Ä¢ Type-safe event handling and payload validation</li>
              <li>‚Ä¢ Centralized configuration and debugging</li>
              <li>‚Ä¢ Memory-efficient with proper cleanup</li>
              <li>‚Ä¢ Specialized hooks for specific use cases</li>
            </ul>
          </div>
          <div>
            <h4 class="font-medium text-gray-800 mb-2">üîß Implementation Details</h4>
            <ul class="text-sm text-gray-700 space-y-1">
              <li>‚Ä¢ Built on Socket.IO client library</li>
              <li>‚Ä¢ React hooks with proper dependency management</li>
              <li>‚Ä¢ TypeScript for complete type safety</li>
              <li>‚Ä¢ Exponential backoff for reconnection</li>
              <li>‚Ä¢ Event-driven architecture with callbacks</li>
              <li>‚Ä¢ Environment-aware configuration</li>
            </ul>
          </div>
          <div>
            <h4 class="font-medium text-gray-800 mb-2">üì¶ Files Created</h4>
            <ul class="text-sm text-gray-700 space-y-1">
              <li>‚Ä¢ <code>src/utils/websocket.ts</code> - Core utilities</li>
              <li>‚Ä¢ <code>src/hooks/useWebSocket.ts</code> - Base hook</li>
              <li>‚Ä¢ <code>src/hooks/useGenerationProgress.ts</code> - Specialized hook</li>
            </ul>
          </div>
          <div>
            <h4 class="font-medium text-gray-800 mb-2">üöÄ Usage in Components</h4>
            <ul class="text-sm text-gray-700 space-y-1">
              <li>‚Ä¢ ProgressTracker can be refactored to use hooks</li>
              <li>‚Ä¢ Future components can reuse connection logic</li>
              <li>‚Ä¢ Consistent error handling across app</li>
              <li>‚Ä¢ Easy testing with mock implementations</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>